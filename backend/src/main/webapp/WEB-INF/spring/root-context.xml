<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd
         http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd">

    <!-- 1. 컴포넌트 스캔 -->
    <context:component-scan base-package="org.scoula.backend" />

    <!-- 2. 외부 설정파일 로딩 -->
    <context:property-placeholder location="classpath:db.properties" />

    <!-- 3. HikariCP 데이터소스 설정 -->
    <bean id="dataSource" class="com.zaxxer.hikari.HikariDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}" />
        <property name="jdbcUrl" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
        <!-- 옵션: 풀 크기 등 -->
        <property name="maximumPoolSize" value="10" />
        <property name="minimumIdle" value="2" />
    </bean>

    <!-- 4. MyBatis SqlSessionFactory 설정 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <!-- 매퍼 파일 경로 (예: resources/mapper/*.xml) -->
        <property name="mapperLocations" value="classpath*:mapper/*.xml" />
        <!-- MyBatis 설정 XML -->
        <!-- <property name="configLocation" value="classpath:mybatis-config.xml"/> -->
    </bean>

    <!-- 5. SqlSessionTemplate -->
    <bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" />
    </bean>

    <!-- 6. 트랜잭션 설정 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    <tx:annotation-driven transaction-manager="transactionManager" />

</beans>